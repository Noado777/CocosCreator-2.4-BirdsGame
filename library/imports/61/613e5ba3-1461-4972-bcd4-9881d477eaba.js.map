{"version":3,"sources":["assets\\script\\BirdManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AAElC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAyC,+BAAY;IAArD;QAAA,qEAmDC;QAlDG,QAAQ;QAER,UAAI,GAAa,IAAI,CAAE;QACvB,WAAW;QACX,UAAI,GAAU,GAAG,CAAE;QACnB,MAAM;QACN,WAAK,GAAW,CAAC,CAAE;;IA4CvB,CAAC;IAxCG,2BAAK,GAAL;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IAEvB,CAAC;IACD,aAAa;IACb,iCAAW,GAAX;QAAA,iBA8BC;QA7BG,4DAA4D;QAC5D,IAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,EAAE,CAAC,QAAQ,CAAC;YACtD,OAAO;YACP,IAAI,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACzC,QAAQ;YACR,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,WAAW;YACX,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAC,GAAG,GAAC,GAAG,CAAC;YACnC,6CAA6C;YAE7C,4CAA4C;YAC5C,OAAO;YACP,QAAQ,CAAC,YAAY,CAAC,qBAAW,CAAC,CAAC,gBAAgB,GAAG;gBAClD,KAAI,CAAC,KAAK,IAAI,GAAG,CAAC;gBAClB,+BAA+B;gBAC/B,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAC/C,CAAC,CAAA;YACD,SAAS;YACT,QAAQ,CAAC,YAAY,CAAC,qBAAW,CAAC,CAAC,WAAW,GAAG;gBAC7C,KAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC/B,KAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC3B,sBAAsB;gBACtB,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YAE9D,CAAC,CAAA;QACL,CAAC,CAAC,CAAC,CAAA;QACH,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,4BAAM,GAAN,UAAQ,EAAE;IAEV,CAAC;IA/CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACG;IAMvB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;qDACI;IATN,WAAW;QAD/B,OAAO;OACa,WAAW,CAmD/B;IAAD,kBAAC;CAnDD,AAmDC,CAnDwC,EAAE,CAAC,SAAS,GAmDpD;kBAnDoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import BirdControl from \"./BirdControl\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BirdManager extends cc.Component {\r\n    // 小鸟预设体\r\n    @property(cc.Prefab)\r\n    Bird:cc.Prefab = null ; \r\n    // 多久出来一只小鸟\r\n    time:number = 1.5 ;\r\n    // 分数板\r\n    score: number = 0 ;\r\n    @property(cc.Label)\r\n    score_number:cc.Label ;\r\n\r\n    start () {\r\n        this.createBirds();\r\n        \r\n    }  \r\n    // 另外写创建小鸟的函数\r\n    createBirds(){\r\n        // 每隔多久一只小鸟,过delayTime之后执行第二个动作cc.callFunc(), schedule()也可以用\r\n        let seq = cc.sequence(cc.delayTime(this.time),cc.callFunc(()=>{\r\n            // 创建小鸟\r\n            let new_bird = cc.instantiate(this.Bird);\r\n            // 设置父物体\r\n            new_bird.setParent(this.node);\r\n            // 小鸟初始随机位置\r\n            new_bird.y = 0;\r\n            new_bird.x = Math.random()*230-120;\r\n            // this.node.getComponent(BirdControl).fly();\r\n            \r\n            // new_bird.getComponent(BirdControl).fly();\r\n            // 加分回调\r\n            new_bird.getComponent(BirdControl).addScoreCallBack = ()=>{\r\n                this.score += 100;\r\n                // console.log('分数'+this.score)\r\n                this.score_number.string = this.score + '';\r\n            }\r\n            // 游戏结束回调\r\n            new_bird.getComponent(BirdControl).dieCallBack = () =>{\r\n                this.node.destroyAllChildren();\r\n                this.node.stopAllActions();\r\n                // console.log('游戏结束')\r\n                this.node.parent.getChildByName('backView').active = true;\r\n                \r\n            }\r\n        }))\r\n        // runAction(cc.repeatForever())来套,一直产生小鸟\r\n        this.node.runAction(cc.repeatForever(seq));       \r\n    }\r\n    \r\n    update (dt) {\r\n        \r\n    }\r\n}\r\n"]}